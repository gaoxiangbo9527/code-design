封装
    封装是指通过若干方式把对象的内部实现细节隐藏起来。外部即使从公开的方法中也不能得知对象的内部是如何组织的。
    关键在于“封”字，关起来、藏起来的意思。
    封装的核心在于“隐藏”。

    将属性声明为 private 或 protected 可以避免外部破坏对象的数据，确实有助于封装，但是不能说封装只是将属性声明为 private 或 protected
    而已。
    将属性声明为 private 或 protected ，然后声明对应的赋值器和取值器更是不可取的做法。先隐藏再公开，多此一举，完全背离了封装的核心。

抽象
    忽略事物中与当前目标无关的非本质特征，更充分地注意与当前目标有关的本质特征。从而找出事物的共性，并把具有共性的事物划为一类，得到一个抽象
    的概念。
    关键在于“抽”字，抽取、提取的意思。
    抽象的核心在于忘记实现细节，关注类型及其接口。

    抽象有助于封装。

多态
    多态是指在一个共通接口后面维护多种实现。
    即在一个接口或者抽象类中定义一个共通接口，然后多个类去实现该共通接口。

    多态实则是一种特殊的封装形式。

继承
    继承是指子类继承父类的特性的一种能力。
    继承的本质目的是为了 复用 。

这四个基本特性是互相联系、相辅相成的。
