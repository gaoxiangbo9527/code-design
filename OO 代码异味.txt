代码重复
  典型症状
  缺点
    紧耦合
  解决方案
    
    
条件语句
  典型症状
    在类中频繁的使用相同结构的条件语句，特别是多个方法中都出现了相同结构的条件语句。其实这算是一种特殊的代码重复。
  缺点
    代码重复。
    从而导致可复用性、可读性、可维护性、可扩展性都差。
  解决方案
    多态。
    把该类拆分成一个抽象基类和多个子类，在抽象基类中定义公共的接口，然后多个子类去实现这些公共接口，这就是多态的含义。
    往往在抽象基类中有一个静态的工厂方法，其中放置着该条件语句，并且把所需类型的对象返回给客户端代码，供客户端代码使用。
    注意，这并没有把条件语句完全干掉，但利用多态把条件语句集中到了一处，消除了重复。
  参考内容
    深入PHP：6.4
    代码整洁之道：3.4
  
类知道的太多
  典型症状
    全局变量、火车失事用法
  缺点
    依赖太多，造成紧耦合
  解决方案
    得墨忒耳定律
  
万能的类
  典型症状
    类太长、实例变量和方法多而且乱，类名很难起，类的功能很难简单的描述出来
  缺点
    职责不单一
  解决方案
    拆分大类成小类、拆分大函数为小函数